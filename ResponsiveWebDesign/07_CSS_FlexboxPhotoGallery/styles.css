* {
    /*Normalize your box model by creating a * selector*/
    box-sizing: border-box;
}
body{
    margin: 0;
    font-family: sans-serif;
    background-color: #f5f6f7;
  
  }
  .header{
    text-align: center;
    text-transform: uppercase;
    padding: 32px;
    background-color: #0a0a23;
    color: #fff;
    border-bottom: 4px solid #fdb347;
  }
  .gallery{
    display: flex; /*This will make the element a flex container. Any direct children of a flex container are called flex items.*/
    /*Flexbox has a main and cross axis.*/
    flex-direction: row; 
    /*
    row (default): horizontal axis with flex items from left to right
    row-reverse: horizontal axis with flex items from right to left
    column: vertical axis with flex items from top to bottom
    column-reverse: vertical axis with flex items from bottom to top
    */
    flex-wrap: wrap; /*Setting it to wrap will allow the items to wrap to the next row or column. nowrap (default) will prevent your items from wrapping and shrink them if needed.*/
    justify-content: center; /*how the items inside a flex container are positioned along the main axis, affecting their position and the space around them.*/
    align-items: center; /*positions the flex content along the cross axis*/

    padding: 20px 10px;
    max-width:1400px;
    margin: 0 auto;

    gap: 16px; /*sets the gaps, also knowns as gutters, between rows and columns. The gap property and its row-gap and column-gap sub-properties provide this functionality for flex, grid, and multi-column layout.*/
  }
.gallery img {
    width: 100%;
    max-width: 350px;
    height: 300px;

    object-fit: cover; /*This will tell the image to fill the img container while maintaining aspect ratio, resulting in cropping to fit.*/

    border-radius: 10px;
}
.gallery::after{ /*not .gallery img::after*/
    content: "";
    width: 350px;
}